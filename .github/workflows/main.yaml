on: push

jobs:
  CICD:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: Rscript {0}
    # this needs to be the same as in Dockerfile
    container:
      image: subugoe/muggle-onbuild:f60004c31979947dab53fbf9cfbb0e7f1c4bea55
    steps:
      - uses: actions/checkout@v2
      - name: Cache R Packages
        uses: actions/cache@v2
        with:
          # only cache the user library
          path: ".github/library"
          key: ${{ job.container.image }}-${{ hashFiles('DESCRIPTION') }}
      - name: Install System Dependencies
        run: muggle::install_sysdeps()
      - name: Install R Dependencies
        env:
          # see builder.Dockerfile for explanation, this resets after this step
          R_LIBS_SITE: $R_LIBS_APP_GH
        run: remotes::install_deps(dependencies = TRUE)
      - name: Check
        run: muggle::rcmdcheck2()
      - name: Test Coverage
        run: covr::codecov()
      - name: Build Package Website
        run: |
          # extra step is necessary to build index.md to integrate readme and landing page
          rmarkdown::render("pkgdown/index.Rmd")
          pkgdown::build_site(override = list(new_process = FALSE))
      - uses: docker/build-push-action@v1
        name: Build Dev Image
        with:
          repository: ${{ github.repository }}/hoad-dev
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          # this will set "latest" if master as per https://github.com/docker/build-push-action
          tag_with_ref: true
          # we're relying on long shas only to keep things easy
          tag_with_sha: false
          tags: ${{ github.sha }}
          add_git_labels: true
          push: ${{ github.event_name != 'pull_request' }}
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/master'
        uses: maxheld83/ghpages@github-token
        env:
          BUILD_DIR: docs
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  azure:
    needs: CICD
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'pull_request' }}
    steps:
      # here are instructions for minimally scoped auth https://github.com/Azure/webapps-container-deploy
      - name: Log in to Azure
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Log in to GitHub Package Registry
        uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy to Azure Web Apps for Containers
        uses: azure/webapps-deploy@v2
        with:
          app-name: hoad
          images: docker.pkg.github.com/${{ github.repository }}/hoad-dev:${{ github.ref }}
